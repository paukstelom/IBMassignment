# name: Build and update the container an Azure Web App

env:
  AZURE_WEBAPP_NAME: "ibm-webapp"
  IMAGE_REGISTRY: "ghcr.io"
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}  

on:
  push:
    branches: [ "test" ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  build:
    name: Building and pushing container image
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./my-app

    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.9.1

      - name: Log in to GitHub container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Lowercase the repo name and username
        run: echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

      - name: Get tag from VERSION file
        run: echo "IMAGE_TAG=$(cat VERSION)" >>${GITHUB_ENV}

      - name: Create image name
        id: image_name
        run: echo "IMAGE_NAME=${{ env.REPO }}/${{ env.AZURE_WEBAPP_NAME }}:${{ env.IMAGE_TAG }}" >>${GITHUB_ENV}

      - name: Build and push container image to registry
        uses: docker/build-push-action@v4
        with:
          push: true
          context: ./my-app
          build-args: |
            IMAGE_TAG=${{ env.IMAGE_TAG }}
          tags: ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}
          file: ./my-app/Dockerfile

  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build
    # environment:
    #   name: 'Development'
    #   url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    outputs:
      webapp-url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_SERVICE_PRINCIPAL }}

      - name: Get Publish Profile
        id: getPublishProfile
        run: |
          echo "::set-output name=PUBLISH_PROFILE::$(az webapp deployment list-publishing-profiles -g IBM-PROJECT-RG -n IBM-PROJECT-WEBAPP --xml)"
      
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: IBM-PROJECT-WEBAPP
          publish-profile: ${{ steps.getPublishProfile.outputs.PUBLISH_PROFILE }}
          images: ${{ env.IMAGE_REGISTRY }}/${{ build.steps.image_name.outputs.IMAGE_NAME }}
