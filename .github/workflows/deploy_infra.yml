name: Deploy infrastructure

env:
  AZURE_WEBAPP_NAME: "ibm-webapp"
  IMAGE_REGISTRY: "ghcr.io"
  RESROUCES_PREFIX: "IBM-PROJET"
  RESOURCES_LOCATION: "westeurope"
  STORAGE_ACCOUNT_NAME: "ibmstorageaccount"
  STORAGE_CONTAINER_NAME: "ibmstoragecontainer" 

on:
  push:
    branches: [ "test" ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  build:
    name: Building and pushing container image
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./my-app

    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.9.1

      - name: Log in to GitHub container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Lowercase the repo name and username
        run: echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

      - name: Get tag from VERSION file
        run: echo "IMAGE_TAG=$(cat VERSION)" >>${GITHUB_ENV}

      - name: Create image name
        run: echo "IMAGE_NAME=${{ env.REPO }}/${{ env.AZURE_WEBAPP_NAME }}:${{ env.IMAGE_TAG }}" >>${GITHUB_ENV}

      - name: Build and push container image to registry
        uses: docker/build-push-action@v4
        with:
          push: true
          context: ./my-app
          build-args: |
            IMAGE_TAG=${{ env.IMAGE_TAG }}
          tags: ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}
          file: ./my-app/Dockerfile

  state:
    name: Deploying remote state
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v3

      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}}}

      - name: Create storage account using bash script from repo 
        run: |
          bash remote_state_init.sh \
          ${{ env.RESROUCES_PREFIX }} \
          ${{ env.RESOURCES_LOCATION }} \
          ${{ env.STORAGE_ACCOUNT_NAME }} \
          ${{ env.STORAGE_CONTAINER_NAME }} 

  terraform:
    name: Deploying Infrastructure
    needs: [build, state]
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }} 

    defaults:
      run:
        working-directory: ./terraform
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: |
          terraform init \
          -backend-config=storage_account_name=${{ env.STORAGE_ACCOUNT_NAME }} \
          -backend-config=container_name=${{ env.STORAGE_CONTAINER_NAME }} \
          -backend-config=resource_group_name="${{ env.RESROUCES_PREFIX }}-RG-STATE" \

      - name: Terraform Apply
        run: |
          terraform apply -auto-approve \
          -var="image_name=${{ env.IMAGE_NAME }}" \
          -var="image_registry_username=${{ github.actor }}" \
          -var="image_registry_password=${{ github.token }}" \
          -var="image_registry_url=https://${{ env.IMAGE_REGISTRY }}"
