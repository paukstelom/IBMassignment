name: Build and deploy a container to an Azure Web App

env:
  AZURE_WEBAPP_NAME: "ibm-webapp"
  ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}  

on:
  push:
    branches: [ "test" ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  build:
    name: Building and pushing container image
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./my-app

    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.9.1

      - name: Log in to GitHub container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Lowercase the repo name and username
        run: echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

      - name: Get tag from VERSION file
        run: echo "IMAGE_TAG=$(cat VERSION)" >>${GITHUB_ENV}

      - name: Create image name
        run: echo "IMAGE_NAME=ghcr.io/${{ env.REPO }}/${{ env.AZURE_WEBAPP_NAME }}:${{ env.IMAGE_TAG }}" >>${GITHUB_ENV}

      - name: Build and push container image to registry
        uses: docker/build-push-action@v4
        with:
          push: true
          context: ./my-app
          tags: ${{ env.IMAGE_NAME }}
          file: ./my-app/Dockerfile

  # terraform:
  #   name: Deploying Azure Web App instance
  #   runs-on: ubuntu-latest
  #   # environment: production

  #   defaults:
  #     run:
  #       working-directory: ./terraform
  #       shell: bash

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Setup Terraform
  #       uses: hashicorp/setup-terraform@v1
  #       with:
  #         cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

  #     - name: Terraform Init
  #       run: terraform init

  #     - name: Terraform Plan
  #       run: terraform plan -var=

  #     - name: Terraform Apply
  #       if: github.ref == 'refs/heads/"main"' && github.event_name == 'push'
  #       run: terraform apply -auto-approve -input=false
