name: Build and deploy a container to an Azure Web App

env:
  AZURE_WEBAPP_NAME: "ibm-webapp"
  IMAGE_REGISTRY: "ghcr.io"
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}  

on:
  push:
    branches: [ "test" ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  build:
    name: Building and pushing container image
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./my-app

    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.9.1

      - name: Log in to GitHub container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Lowercase the repo name and username
        run: echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

      - name: Get tag from VERSION file
        run: echo "IMAGE_TAG=$(cat VERSION)" >>${GITHUB_ENV}

      - name: Create image name
        run: echo "IMAGE_NAME=${{ env.REPO }}/${{ env.AZURE_WEBAPP_NAME }}:${{ env.IMAGE_TAG }}" >>${GITHUB_ENV}

      - name: Build and push container image to registry
        uses: docker/build-push-action@v4
        with:
          push: true
          context: ./my-app
          tags: ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}
          file: ./my-app/Dockerfile

  terraform:
    name: Deploying Azure Web App instance
    # environment: production
    needs: build
    runs-on: ubuntu-latest
    # env:
    # #this is needed since we are running terraform with read-only permissions
    #   ARM_SKIP_PROVIDER_REGISTRATION: true
    # outputs:
    #   webapp-url: ${{ steps.deploy.outputs.webapp-url }}

    defaults:
      run:
        working-directory: ./terraform
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        # with:
        #   terraform_wrapper: false

      - name: Terraform Init
        run: |
          terraform init
        # -backend-config=subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }} \
        # -backend-config=tenant_id=${{ secrets.AZURE_TENANT_ID }} \
        # -backend-config=client_id=${{ secrets.AZURE_CLIENT_ID }} \
        # -backend-config=client_secret=${{ secrets.AZURE_CLIENT_SECRET }}
        # -backend-config=storage_account_name=$TerraformBackendStorageAccount \
        # -backend-config=container_name=$TerraformBackendStorageContainer \
        # -backend-config=resource_group_name=$TerraformBackendResourceGroup \

      - name: Terraform Apply
        run: |
          terraform apply -auto-approve \
          -var="image_name=${{ env.IMAGE_NAME }}" \
          -var="image_registry_username=${{ github.actor }}" \
          -var="image_registry_password=${{ github.token }}" \
          -var="image_registry_url=https://${{ env.IMAGE_REGISTRY }}"
